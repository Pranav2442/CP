{"id":662373241,"lang":"cpp","time":"3 months, 3 weeks","timestamp":1647601794,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/662373241/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        \n        if(root==NULL){\n            return NULL;\n        }\n        \n        int cur=root->val;\n        \n        if(cur>p->val && cur>q->val){\n           return lowestCommonAncestor(root->left, p, q);\n        }\n        \n        if(cur<p->val && cur<q->val){\n            return lowestCommonAncestor(root->right, p, q);\n        }\n        \n        return root;\n        \n    }\n};","compare_result":"1011110010010100101010000000001","title_slug":"lowest-common-ancestor-of-a-binary-tree"}