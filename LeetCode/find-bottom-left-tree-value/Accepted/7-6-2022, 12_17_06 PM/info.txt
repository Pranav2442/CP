{"id":739826044,"lang":"cpp","time":"2 days, 11 hours","timestamp":1657090026,"status_display":"Accepted","runtime":"34 ms","url":"/submissions/detail/739826044/","is_pending":"Not Pending","title":"Find Bottom Left Tree Value","memory":"21.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxlevel=-1;\n    \n    void solve(TreeNode* root,int &ans,int level){\n        if(root==NULL){\n            return ;\n        }\n        \n        if(level>maxlevel){\n            maxlevel=level;\n            ans=root->val;\n        }\n        \n        solve(root->left,ans,level+1);\n        solve(root->right,ans,level+1);\n    }\n    \n    int findBottomLeftValue(TreeNode* root) {\n        int ans=0;\n        solve(root,ans,0);\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-bottom-left-tree-value"}