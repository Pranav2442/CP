{"id":739815613,"lang":"cpp","time":"2 days, 11 hours","timestamp":1657089210,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/739815613/","is_pending":"Not Pending","title":"Find Bottom Left Tree Value","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void solve(TreeNode* root,int &ans,int status){\n        if(root->left==NULL && root->right==NULL){\n            if(status==1){\n                ans=root->val;\n            }\n            return;\n        }\n        \n        if(root->left){\n            solve(root->left,ans,1);\n        }\n        if(root->right){\n            solve(root->right,ans,0);\n        }\n        \n        \n    }\n    int findBottomLeftValue(TreeNode* root) {\n        int ans=0;\n        if(root->left==NULL && root->right==NULL){\n            return root->val;\n        }\n        solve(root,ans,0);\n        return ans;\n    }\n};","compare_result":"1111101010110001101011111010100110101110101001101011111100111100001111111111","title_slug":"find-bottom-left-tree-value"}