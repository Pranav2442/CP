{"id":739158750,"lang":"cpp","time":"3 hours, 19 minutes","timestamp":1657028919,"status_display":"Accepted","runtime":"41 ms","url":"/submissions/detail/739158750/","is_pending":"Not Pending","title":"Kth Smallest Element in a BST","memory":"24.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    void solve(TreeNode*root,vector<int> &vec){\n        \n        if(root==NULL){\n            return;\n        }\n        \n        solve(root->left,vec);\n        vec.push_back(root->val);\n        solve(root->right,vec);\n        \n    }\n    int kthSmallest(TreeNode* root, int k) {\n        vector<int> vec;\n        solve(root,vec);\n        return vec[k-1];\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"kth-smallest-element-in-a-bst"}