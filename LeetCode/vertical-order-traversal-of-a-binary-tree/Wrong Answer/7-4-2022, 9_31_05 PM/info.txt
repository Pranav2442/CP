{"id":738351132,"lang":"cpp","time":"4 days, 1 hour","timestamp":1656950465,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/738351132/","is_pending":"Not Pending","title":"Vertical Order Traversal of a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> verticalTraversal(TreeNode* root) {\n        \n        vector<vector<int>> ans;\n        \n        if(root==NULL){\n            return ans;\n        }\n        \n        map<int,map<int,vector<int>>> m;\n        queue<pair<TreeNode*,pair<int,int>>> q;\n            \n        q.push(make_pair(root,make_pair(0,0)));\n        while(!q.empty()){\n            pair<TreeNode*,pair<int,int>> temp=q.front();\n            q.pop();\n            \n            TreeNode* node=temp.first;\n            int hd=temp.second.first;\n            int v=temp.second.second;\n            \n            m[hd][v].push_back(node->val);\n            \n            if(node->left){\n                q.push(make_pair(node->left,make_pair(hd-1,v+1)));\n                \n            }\n            \n            if(node->right){\n                q.push(make_pair(node->right,make_pair(hd+1,v+1)));\n            }\n            \n        }\n        \n        for(auto&i:m){\n            vector<int> temp;\n            for(auto & j: i.second){\n                for(auto &k :j.second){\n                    temp.push_back(k);\n                    \n                }\n            }\n            sort(temp.begin(),temp.end());\n            ans.push_back(temp);\n        }\n        \n        return ans;\n        \n    }\n};","compare_result":"11111111111001101000000000000000","title_slug":"vertical-order-traversal-of-a-binary-tree"}