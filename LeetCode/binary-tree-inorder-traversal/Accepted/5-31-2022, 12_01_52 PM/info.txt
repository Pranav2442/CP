{"id":711079196,"lang":"cpp","time":"1Â month","timestamp":1653978712,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/711079196/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"8.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> inorderTraversal(TreeNode* root) {\n            \n        vector<int> inorder;\n        TreeNode* head=root;\n        stack<TreeNode*> st;\n        \n        while(true){\n            if(head!=NULL){\n                st.push(head);\n                head=head->left;\n            } else{\n                if(st.empty()){\n                    break;\n                }\n                head=st.top();\n                st.pop();\n                inorder.push_back(head->val);\n                head=head->right;\n                \n            }\n        }\n        return inorder;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal"}