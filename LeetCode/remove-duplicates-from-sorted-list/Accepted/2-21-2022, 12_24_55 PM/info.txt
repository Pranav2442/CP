{"id":645827081,"lang":"cpp","time":"4 months, 2 weeks","timestamp":1645426495,"status_display":"Accepted","runtime":"21 ms","url":"/submissions/detail/645827081/","is_pending":"Not Pending","title":"Remove Duplicates from Sorted List","memory":"11.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteDuplicates(ListNode* head) {\n        \n        \n        ListNode* tmp = head;\n         while (tmp!= NULL && tmp->next != NULL){\n            if(tmp->val==tmp->next->val){\n                tmp->next=tmp->next->next;         \n            }else{\n                tmp= tmp->next; \n            }\n        }\n\n        return head; \n    }\n\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-duplicates-from-sorted-list"}