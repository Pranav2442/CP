{"id":664956788,"lang":"cpp","time":"3 months, 2 weeks","timestamp":1647941021,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/664956788/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    bool check(TreeNode*a,TreeNode*b){\n        \n        if(a==NULL && b==NULL){\n            return true;\n        }\n        \n        if(a==NULL || b==NULL){\n            return false;\n        }\n        \n        if(a->val!=b->val){\n            return false;\n        }\n        \n        bool l=true,r=true;\n        l=check(a->left,b->right);\n        r=check(b->left,a->right);\n        return l&r;\n        \n    }\n    bool isSymmetric(TreeNode* root){\n        \n        if(root==NULL){\n            return 0;\n            \n            \n            \n        }\n        return check(root->left,root->right);\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}