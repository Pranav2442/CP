{"id":664889106,"lang":"cpp","time":"3 months, 2 weeks","timestamp":1647931112,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/664889106/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"12.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        \n        vector<vector<int>> ans;\n        if(root==NULL){\n            return ans;\n        }\n        queue<TreeNode*>q;\n        \n        q.push(root);\n        \n        while(!q.empty()){\n            \n            int size=q.size();\n            vector<int> levels;\n            \n            for(int i=0;i<size;i++){\n                \n                TreeNode* x=q.front();\n                q.pop();\n                if(x->left){\n                    q.push(x->left);\n                }\n                if(x->right){\n                    q.push(x->right);\n                }\n                levels.push_back(x->val);\n            }\n            ans.push_back(levels);\n        \n        }\n        return ans;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal"}