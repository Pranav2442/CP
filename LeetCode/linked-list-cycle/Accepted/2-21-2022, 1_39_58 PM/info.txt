{"id":645866359,"lang":"cpp","time":"4Â months, 2Â weeks","timestamp":1645430998,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/645866359/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        \n        ListNode * fast=head;\n        ListNode* slow=head;\n        \n        while(fast!=NULL && fast->next!=NULL){\n            fast=fast->next->next;\n            slow=slow->next;\n            \n            if(fast==slow){\n                return true;\n            }\n            \n        }\n        \n        return false;\n        \n        \n        \n        \n        \n        \n    }\n};","compare_result":"111111111111111111111","title_slug":"linked-list-cycle"}