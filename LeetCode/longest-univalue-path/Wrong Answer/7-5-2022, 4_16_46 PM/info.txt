{"id":739048154,"lang":"cpp","time":"6 hours, 21 minutes","timestamp":1657018006,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/739048154/","is_pending":"Not Pending","title":"Longest Univalue Path","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n int solve(TreeNode*root,int& sum){\n        if(root==NULL){\n            return 0;\n        }\n        \n        int left=solve(root->left,sum);\n        int right=solve(root->right,sum);\n        if(root->left && root->val==root->left->val){\n            left++;\n        } else{\n            left=0;\n        }\n        \n        if(root->right && root->val==root->right->val){\n            right++;\n        } else {\n            right=0;\n        }\n        \n        sum=max(sum,(left+right));\n        return max(left,right);\n    }\n    int longestUnivaluePath(TreeNode* root) {\n        \n        if(!root){\n            return 0;\n        }\n        int sum;\n        \n        solve(root,sum);\n        return sum;\n        \n    }\n};","compare_result":"00010000000000000000000000000000000000000000000000000000000000000000000","title_slug":"longest-univalue-path"}