{"id":739862366,"lang":"cpp","time":"2 days, 10 hours","timestamp":1657093159,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/739862366/","is_pending":"Not Pending","title":"Maximum Level Sum of a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxLevelSum(TreeNode* root) {\n        queue<TreeNode*> q;\n        q.push(root);\n        if(root==NULL){\n            return 0;\n        }\n        int ans=0;\n        int levelnum=0;\n        while(!q.empty()){\n            int maxi=INT_MIN;\n            vector<int> level;\n            \n            int size=q.size();\n            for(int i=0;i<size;i++){\n                TreeNode* temp=q.front();\n                q.pop();\n                if(temp->left){\n                    q.push(temp->left);\n                }\n                \n                if(temp->right){\n                    q.push(temp->right);\n                }\n                level.push_back(temp->val);\n                \n            }\n            if(accumulate(level.begin(),level.end(),0)>maxi){\n                maxi=accumulate(level.begin(),level.end(),0);\n                ans=levelnum;\n            levelnum++;    \n                \n            }\n            \n            \n        }\n        return ans;\n    }\n};","compare_result":"1000000000100000000000000000000000000000","title_slug":"maximum-level-sum-of-a-binary-tree"}