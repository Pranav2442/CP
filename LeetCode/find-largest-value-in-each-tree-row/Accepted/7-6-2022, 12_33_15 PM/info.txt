{"id":739837920,"lang":"cpp","time":"2 days, 10 hours","timestamp":1657090995,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/739837920/","is_pending":"Not Pending","title":"Find Largest Value in Each Tree Row","memory":"22.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> largestValues(TreeNode* root) {\n        vector<int> ans;\n        queue<TreeNode*> q;\n        q.push(root);\n        if(root==NULL){\n            return ans;\n        }\n        \n        while(!q.empty()){\n            int maxi=INT_MIN;\n            int size=q.size();\n            vector<int> level;\n            for(int i=0;i<size;i++){\n                TreeNode* temp=q.front();\n                q.pop();\n                \n                if(temp->left){\n                    q.push(temp->left);\n                } \n                \n                if(temp->right){\n                    q.push(temp->right);\n                }\n                \n                level.push_back(temp->val);\n            }\n            \n            for(int i=0;i<level.size();i++){\n                maxi=max(maxi,level[i]);\n            }\n            \n            ans.push_back(maxi);\n        }\n        \n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-largest-value-in-each-tree-row"}