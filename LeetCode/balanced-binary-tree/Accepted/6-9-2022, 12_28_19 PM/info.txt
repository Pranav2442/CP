{"id":717918715,"lang":"cpp","time":"4 weeks, 1 day","timestamp":1654757899,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/717918715/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"20.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    int height(TreeNode* root){\n        \n        if(root==NULL){\n            return 0;\n        }\n        \n        int l=height(root->left);\n        if (l==-1){\n            return -1;\n        }\n        int r=height(root->right);\n        if(r==-1){\n            return -1;\n        }\n        if(abs(l-r)>1){\n            return -1;\n        }\n        \n        return 1+max(l,r);\n        \n    }\n    \n    \n    bool isBalanced(TreeNode* root) {\n        \n        if(height(root)!=-1){\n            return true;\n        } else{\n            return false;\n        }\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree"}