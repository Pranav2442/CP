{"id":662299552,"lang":"cpp","time":"3 months, 3 weeks","timestamp":1647588434,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/662299552/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    bool isbst(TreeNode * root,long long int min,long long int max){\n        \n        if(root==NULL){\n            return true;\n        }\n        \n        if(root->val>=min && root->val<=max){\n            bool left=isbst(root->left,min,root->val);\n            bool right=isbst(root->right,root->val,max);\n            return left && right;\n            \n        } else{\n            return false;\n        }\n        \n    }\n    \n    \n    bool isValidBST(TreeNode* root) {\n        \n        return isbst(root,INT_MIN,INT_MAX);\n        \n        \n        \n        \n        \n        \n    }\n};","compare_result":"11110001111111111011111111111111111111110111111111111111101111000011111111111001","title_slug":"validate-binary-search-tree"}