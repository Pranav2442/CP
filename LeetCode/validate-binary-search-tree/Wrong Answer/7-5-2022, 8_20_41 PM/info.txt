{"id":739200167,"lang":"cpp","time":"3 days, 2 hours","timestamp":1657032641,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/739200167/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool solve(TreeNode* root,long long lb,long long ub){\n        if(root==NULL){\n            return true;\n        }\n        \n        return root->val>lb && root->val<ub && solve(root->left,lb,root->val) && solve(root->right,root->val,ub);\n    }\n    bool isValidBST(TreeNode* root) {\n        long long lb=INT_MIN;\n        long long ub=INT_MAX;\n        return solve(root,lb,ub);\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111100111101010111001110","title_slug":"validate-binary-search-tree"}