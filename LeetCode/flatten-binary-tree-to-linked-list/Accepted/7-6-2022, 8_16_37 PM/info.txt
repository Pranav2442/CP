{"id":740118923,"lang":"cpp","time":"2 days, 3 hours","timestamp":1657118797,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/740118923/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"12.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* pre=NULL;\n    void flatten(TreeNode* root) {\n        \n        if(root==NULL){\n            return;\n        }\n        \n        flatten(root->right);\n        flatten(root->left);\n        \n        root->right=pre;\n        root->left=NULL;\n        pre=root;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list"}