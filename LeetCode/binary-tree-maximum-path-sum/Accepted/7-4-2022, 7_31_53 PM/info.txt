{"id":738269680,"lang":"cpp","time":"4 days, 3 hours","timestamp":1656943313,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/738269680/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"27.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxPathSum(TreeNode* root) {\n        int maxi=INT_MIN;\n        solve(root,maxi);\n        return maxi;\n    }\n    \n    int solve(TreeNode*root,int &maxi){\n        if(root==NULL){\n            return 0;\n        }\n        \n        int left=max(0,solve(root->left,maxi));\n        int right=max(0,solve(root->right,maxi));\n        maxi=max(maxi,left+right+root->val);\n        return root->val+max(left,right);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-maximum-path-sum"}