{"id":659838681,"lang":"cpp","time":"3 months, 3 weeks","timestamp":1647266453,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/659838681/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* searchBST(TreeNode* root, int val) {\n        \n        TreeNode* cur=root;\n    if(cur==NULL){\n        return NULL;\n    }\n\n\n    if(cur->val==val){\n        return cur;\n    }\n\n    if(cur->val>val){\n\n        searchBST(cur=cur->left,val);\n        \n    }\n\n    if(cur->val<val){\n\n        searchBST(cur=cur->right,val);\n        \n    }\n        return cur;\n\n    }\n};","compare_result":"100000000000000000000000000000000000","title_slug":"search-in-a-binary-search-tree"}