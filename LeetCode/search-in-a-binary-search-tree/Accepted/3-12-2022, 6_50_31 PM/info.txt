{"id":658424889,"lang":"cpp","time":"3 months, 3 weeks","timestamp":1647091231,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/658424889/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"34.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* searchBST(TreeNode* root, int val) {\n        \n        if(!root)\n            return NULL;\n        if(root->val==val)\n            return root;\n        return (root->val>val)?searchBST(root->left, val):searchBST(root->right, val);\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"search-in-a-binary-search-tree"}