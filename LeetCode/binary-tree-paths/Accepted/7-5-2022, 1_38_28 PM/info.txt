{"id":738953727,"lang":"cpp","time":"8 hours, 59 minutes","timestamp":1657008508,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/738953727/","is_pending":"Not Pending","title":"Binary Tree Paths","memory":"13.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    void solve(TreeNode* root,vector<string> &ans,string s){\n        if(root->left==NULL && root->right==NULL){\n            ans.push_back(s);\n            return ;\n        }\n        \n        if(root->left) solve(root->left,ans,s+\"->\"+to_string(root->left->val));\n        if(root->right) solve(root->right,ans,s+\"->\"+to_string(root->right->val));\n    }\n    \n    \n    vector<string> binaryTreePaths(TreeNode* root) {\n        \n        \n        vector<string> ans;\n        string str=\"\";\n        \n        solve(root,ans,to_string(root->val));\n        \n        return ans;\n        \n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-paths"}