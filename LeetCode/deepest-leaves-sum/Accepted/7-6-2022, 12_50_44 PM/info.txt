{"id":739850091,"lang":"cpp","time":"2 days, 10 hours","timestamp":1657092044,"status_display":"Accepted","runtime":"137 ms","url":"/submissions/detail/739850091/","is_pending":"Not Pending","title":"Deepest Leaves Sum","memory":"64.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int deepestLeavesSum(TreeNode* root) {\n        int sum=0;\n        queue<TreeNode*> q;\n        q.push(root);\n        if(root==NULL){\n            return sum;\n        }\n        int ans=0;\n        \n    \n        while(!q.empty()){\n        \n            int size=q.size();\n            vector<int> temp;\n            int last=0;\n            for(int i=0;i<size;i++){\n                TreeNode* node=q.front();\n                q.pop();\n                if(node->left){\n                    q.push(node->left);\n                }\n                if(node->right){\n                    q.push(node->right);\n                }\n                temp.push_back(node->val);\n                \n                \n            }\n            sum=accumulate(temp.begin(),temp.end(),0);\n            ans=sum;\n            \n            \n        }\n        return ans;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"deepest-leaves-sum"}