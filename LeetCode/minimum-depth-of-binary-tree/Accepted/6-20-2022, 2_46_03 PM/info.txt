{"id":726608939,"lang":"cpp","time":"2 weeks, 1 day","timestamp":1655716563,"status_display":"Accepted","runtime":"266 ms","url":"/submissions/detail/726608939/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"144.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int minDepth(TreeNode* root) {\n        \n        if(root==NULL){\n            return 0;\n        }\n        \n        if(root->left && root->right){\n                \n            return min(minDepth(root->left),minDepth(root->right))+1;            \n        }\n        \n        if(root->left){\n            return minDepth(root->left)+1;\n        } else{\n            return minDepth(root->right)+1;\n        }\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"minimum-depth-of-binary-tree"}