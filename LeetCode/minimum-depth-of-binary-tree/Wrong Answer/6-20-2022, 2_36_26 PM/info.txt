{"id":726604246,"lang":"cpp","time":"2 weeks, 1 day","timestamp":1655715986,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/726604246/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int minDepth(TreeNode* root) {\n        \n        if(root->left==NULL){\n            return 1;\n        }\n        if(root->right==NULL){\n            \n            return 1;\n        }\n        \n        int left=minDepth(root->left);\n        int right=minDepth(root->right);\n        \n        return 1+min(left,right);\n        \n    }\n};","compare_result":"1000000000000000000000000000000000000000000000000000","title_slug":"minimum-depth-of-binary-tree"}