{"id":738977097,"lang":"cpp","time":"3 days, 9 hours","timestamp":1657010849,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/738977097/","is_pending":"Not Pending","title":"Second Minimum Node In a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void solve(TreeNode* root,vector<int> &vec){\n        if(root==NULL){\n            return ;\n        }\n        \n        solve(root->left,vec);\n        vec.push_back(root->val);\n        solve(root->right,vec);\n    }\n    \n    int findSecondMinimumValue(TreeNode* root) {\n        \n        vector<int> vec;\n        solve(root,vec);\n        int mini=*min_element(vec.begin(),vec.end());\n        int second=INT_MAX;\n        int counter=0;\n        for(int i=0;i<vec.size();i++){\n            if(mini!=vec[i]){\n                second=min(second,vec[i]);\n            } else{\n                counter++;\n            }\n        }\n        if(counter==vec.size()){\n            return mini;\n        } else{\n        return second;\n        }\n        \n    }\n};","compare_result":"101001111011111111111111011111111111111","title_slug":"second-minimum-node-in-a-binary-tree"}