{"id":658475655,"lang":"cpp","time":"3 months, 3 weeks","timestamp":1647098807,"status_display":"Accepted","runtime":"134 ms","url":"/submissions/detail/658475655/","is_pending":"Not Pending","title":"Insert into a Binary Search Tree","memory":"57 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* insertIntoBST(TreeNode* root, int val) {\n        \n        if(root==NULL){\n            return new TreeNode(val);\n        }\n        TreeNode*cur=root;\n        while(true){\n         if(cur->val>=val){   \n            if(cur->left!=NULL){\n                \n                cur=cur->left;\n            \n            } else{\n                cur->left=new TreeNode(val);\n                break;\n            }\n         } else{\n            if(cur->right!=NULL){\n                \n                cur=cur->right;\n            \n            } else{\n                cur->right=new TreeNode(val);\n                break;\n            }\n            \n        }\n        }\n        return root;\n    }\n};","compare_result":"11111111111111111111111111111111111","title_slug":"insert-into-a-binary-search-tree"}