{"id":660995797,"lang":"cpp","time":"3 months, 3 weeks","timestamp":1647410443,"status_display":"Accepted","runtime":"97 ms","url":"/submissions/detail/660995797/","is_pending":"Not Pending","title":"Insert into a Binary Search Tree","memory":"57 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* insertIntoBST(TreeNode* root, int val) {\n        \n        \n        if(root==NULL){\n            return new TreeNode(val);\n        }\n        \n        TreeNode*cur=root;\n        \n        while(true){\n            if(cur->val>=val){\n                if(cur->left!=NULL){\n                    cur=cur->left;\n                } else{\n                    cur->left=new TreeNode(val);\n                    break;\n                }\n                \n                \n            }\n            \n            if(cur->val<=val){\n                if(cur->right!=NULL){\n                    cur=cur->right;\n                } else{\n                    cur->right=new TreeNode(val);\n                    break;\n                }\n                \n                \n            }\n\n        }\n        return root;\n        \n        \n            }\n};","compare_result":"11111111111111111111111111111111111","title_slug":"insert-into-a-binary-search-tree"}