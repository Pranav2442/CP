{"id":738075321,"lang":"cpp","time":"4 days, 9 hours","timestamp":1656922782,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/738075321/","is_pending":"Not Pending","title":"Construct Binary Tree from Preorder and Inorder Traversal","memory":"26.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    TreeNode* solve(vector<int> &preorder,vector<int> &inorder,int preStart,int inStart,int preEnd,int inEnd,map<int,int> &m){\n        if(preEnd<preStart || inEnd<inStart){\n            return NULL;\n        }\n        \n        TreeNode* root=new TreeNode(preorder[preStart]);\n        int posRoot=m[root->val];\n        int numsLeft=posRoot-inStart;\n        \n        root-> left=solve(preorder,inorder,preStart+1,inStart,preStart+numsLeft,posRoot-1,m);\n        root-> right=solve(preorder,inorder,preStart+numsLeft+1,posRoot+1,preEnd,inEnd,m);\n        return root;\n    }\n    \n    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {\n        \n        map<int,int> m;\n        for(int i=0;i<=inorder.size()-1;i++){\n            m[inorder[i]]=i;\n        }\n        \n        return solve(preorder,inorder,0,0,preorder.size()-1,inorder.size()-1,m);\n        \n    }\n    \n    \n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"construct-binary-tree-from-preorder-and-inorder-traversal"}